{"filter":false,"title":"template.yaml","tooltip":"/serverless-tasks-app/sam/template.yaml","undoManager":{"mark":24,"position":24,"stack":[[{"start":{"row":0,"column":0},"end":{"row":41,"column":0},"action":"insert","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: 'AWS::Serverless-2016-10-31'","Resources:","  # Create Lambda function","  GetTasksFunction:","    Type: AWS::Serverless::Function","    Properties:","      Runtime: python3.11","      CodeUri: src/handlers/getTasks","      Handler: app.lambda_handler","      Policies:","        - DynamoDBCrudPolicy:","            TableName: !Ref TasksTable","      Environment:","        Variables:","          TASKS_TABLE: !Ref TasksTable","      Events:","        GetTasksFunctionApi:","          Type: Api","          Properties:","            RestApiId: !Ref TasksApi","            Path: /tasks","            Method: GET","            Auth:","              Authorizer: MyLambdaTokenAuthorizer","","  # Create DynamoDB table","  TasksTable:","    Type: AWS::DynamoDB::Table","    Properties:","      AttributeDefinitions:","        - AttributeName: \"user\"","          AttributeType: \"S\"","        - AttributeName: \"id\"","          AttributeType: \"S\"","      KeySchema:","        - AttributeName: \"user\"","          KeyType: \"HASH\"","        - AttributeName: \"id\"","          KeyType: \"RANGE\"","      BillingMode: PAY_PER_REQUEST",""],"id":1}],[{"start":{"row":24,"column":49},"end":{"row":25,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":25,"column":0},"end":{"row":25,"column":14},"action":"insert","lines":["              "]}],[{"start":{"row":25,"column":13},"end":{"row":25,"column":14},"action":"remove","lines":[" "],"id":3},{"start":{"row":25,"column":12},"end":{"row":25,"column":13},"action":"remove","lines":[" "]},{"start":{"row":25,"column":8},"end":{"row":25,"column":12},"action":"remove","lines":["    "]},{"start":{"row":25,"column":4},"end":{"row":25,"column":8},"action":"remove","lines":["    "]}],[{"start":{"row":25,"column":0},"end":{"row":25,"column":4},"action":"remove","lines":["    "],"id":4}],[{"start":{"row":3,"column":1},"end":{"row":25,"column":0},"action":"remove","lines":[" # Create Lambda function","  GetTasksFunction:","    Type: AWS::Serverless::Function","    Properties:","      Runtime: python3.11","      CodeUri: src/handlers/getTasks","      Handler: app.lambda_handler","      Policies:","        - DynamoDBCrudPolicy:","            TableName: !Ref TasksTable","      Environment:","        Variables:","          TASKS_TABLE: !Ref TasksTable","      Events:","        GetTasksFunctionApi:","          Type: Api","          Properties:","            RestApiId: !Ref TasksApi","            Path: /tasks","            Method: GET","            Auth:","              Authorizer: MyLambdaTokenAuthorizer",""],"id":10},{"start":{"row":3,"column":1},"end":{"row":25,"column":0},"action":"insert","lines":["# GetTasks Lambda Function","GetTasksFunction:","  Type: AWS::Serverless::Function","  Properties:","    Runtime: python3.11","    CodeUri: src/handlers/getTasks","    Handler: app.lambda_handler","    Policies:","      - DynamoDBCrudPolicy:","          TableName: !Ref TasksTable","    Environment:","      Variables:","        TASKS_TABLE: !Ref TasksTable","    Events:","      GetTasksFunctionApi:","        Type: Api","        Properties:","          RestApiId: !Ref TasksApi","          Path: /tasks","          Method: GET","          Auth:","            Authorizer: MyLambdaTokenAuthorizer",""]}],[{"start":{"row":25,"column":0},"end":{"row":47,"column":0},"action":"insert","lines":["  # CreateTask Lambda Function","  CreateTaskFunction:","    Type: AWS::Serverless::Function","    Properties:","      Tracing: Active","      CodeUri: src/handlers/createTask","      Handler: app.lambda_handler","      Policies:","        - DynamoDBCrudPolicy:","            TableName: !Ref TasksTable","      Environment:","        Variables:","          TASKS_TABLE: !Ref TasksTable","      Events:","        PostTaskFunctionApi:","          Type: Api","          Properties:","            RestApiId: !Ref TasksApi","            Path: /tasks","            Method: POST","            Auth:","              Authorizer: MyLambdaTokenAuthorizer",""],"id":12}],[{"start":{"row":0,"column":0},"end":{"row":64,"column":0},"action":"remove","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: 'AWS::Serverless-2016-10-31'","Resources:"," # GetTasks Lambda Function","GetTasksFunction:","  Type: AWS::Serverless::Function","  Properties:","    Runtime: python3.11","    CodeUri: src/handlers/getTasks","    Handler: app.lambda_handler","    Policies:","      - DynamoDBCrudPolicy:","          TableName: !Ref TasksTable","    Environment:","      Variables:","        TASKS_TABLE: !Ref TasksTable","    Events:","      GetTasksFunctionApi:","        Type: Api","        Properties:","          RestApiId: !Ref TasksApi","          Path: /tasks","          Method: GET","          Auth:","            Authorizer: MyLambdaTokenAuthorizer","  # CreateTask Lambda Function","  CreateTaskFunction:","    Type: AWS::Serverless::Function","    Properties:","      Tracing: Active","      CodeUri: src/handlers/createTask","      Handler: app.lambda_handler","      Policies:","        - DynamoDBCrudPolicy:","            TableName: !Ref TasksTable","      Environment:","        Variables:","          TASKS_TABLE: !Ref TasksTable","      Events:","        PostTaskFunctionApi:","          Type: Api","          Properties:","            RestApiId: !Ref TasksApi","            Path: /tasks","            Method: POST","            Auth:","              Authorizer: MyLambdaTokenAuthorizer","","","  # Create DynamoDB table","  TasksTable:","    Type: AWS::DynamoDB::Table","    Properties:","      AttributeDefinitions:","        - AttributeName: \"user\"","          AttributeType: \"S\"","        - AttributeName: \"id\"","          AttributeType: \"S\"","      KeySchema:","        - AttributeName: \"user\"","          KeyType: \"HASH\"","        - AttributeName: \"id\"","          KeyType: \"RANGE\"","      BillingMode: PAY_PER_REQUEST",""],"id":13},{"start":{"row":0,"column":0},"end":{"row":83,"column":0},"action":"insert","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: 'AWS::Serverless-2016-10-31'","Resources:","  # API Gateway","  TasksApi:","    Type: AWS::Serverless::Api","    Properties:","      Name: TasksApi","      StageName: Prod","","  # GetTasks Lambda Function","  GetTasksFunction:","    Type: AWS::Serverless::Function","    Properties:","      Runtime: python3.11","      CodeUri: src/handlers/getTasks","      Handler: app.lambda_handler","      Policies:","        - DynamoDBCrudPolicy:","            TableName: !Ref TasksTable","      Environment:","        Variables:","          TASKS_TABLE: !Ref TasksTable","      Events:","        GetTasksFunctionApi:","          Type: Api","          Properties:","            RestApiId: !Ref TasksApi","            Path: /tasks","            Method: GET","            Auth:","              Authorizer: MyLambdaTokenAuthorizer","","  # CreateTask Lambda Function","  CreateTaskFunction:","    Type: AWS::Serverless::Function","    Properties:","      Runtime: python3.11","      CodeUri: src/handlers/createTask","      Handler: app.lambda_handler","      Policies:","        - DynamoDBCrudPolicy:","            TableName: !Ref TasksTable","      Environment:","        Variables:","          TASKS_TABLE: !Ref TasksTable","      Events:","        PostTaskFunctionApi:","          Type: Api","          Properties:","            RestApiId: !Ref TasksApi","            Path: /tasks","            Method: POST","            Auth:","              Authorizer: MyLambdaTokenAuthorizer","","  # Lambda Authorizer Function","  MyLambdaTokenAuthorizer:","    Type: AWS::Serverless::Function","    Properties:","      Runtime: python3.11","      CodeUri: src/handlers/authorizer","      Handler: app.authorizer_handler","      Policies: AWSLambdaBasicExecutionRole","      Environment:","        Variables:","          AUTHORIZER_KEY: \"some-key\"","","  # DynamoDB Table","  TasksTable:","    Type: AWS::DynamoDB::Table","    Properties:","      AttributeDefinitions:","        - AttributeName: \"user\"","          AttributeType: \"S\"","        - AttributeName: \"id\"","          AttributeType: \"S\"","      KeySchema:","        - AttributeName: \"user\"","          KeyType: \"HASH\"","        - AttributeName: \"id\"","          KeyType: \"RANGE\"","      BillingMode: PAY_PER_REQUEST",""]}],[{"start":{"row":14,"column":21},"end":{"row":14,"column":25},"action":"remove","lines":["3.11"],"id":14},{"start":{"row":14,"column":21},"end":{"row":14,"column":27},"action":"insert","lines":["3.9.16"]}],[{"start":{"row":37,"column":21},"end":{"row":37,"column":25},"action":"remove","lines":["3.11"],"id":15},{"start":{"row":37,"column":21},"end":{"row":37,"column":27},"action":"insert","lines":["3.9.16"]}],[{"start":{"row":60,"column":21},"end":{"row":60,"column":25},"action":"remove","lines":["3.11"],"id":16},{"start":{"row":60,"column":21},"end":{"row":60,"column":27},"action":"insert","lines":["3.9.16"]}],[{"start":{"row":3,"column":0},"end":{"row":9,"column":0},"action":"remove","lines":["  # API Gateway","  TasksApi:","    Type: AWS::Serverless::Api","    Properties:","      Name: TasksApi","      StageName: Prod",""],"id":17},{"start":{"row":2,"column":10},"end":{"row":3,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":7,"column":26},"end":{"row":7,"column":27},"action":"remove","lines":["6"],"id":18},{"start":{"row":7,"column":25},"end":{"row":7,"column":26},"action":"remove","lines":["1"]},{"start":{"row":7,"column":24},"end":{"row":7,"column":25},"action":"remove","lines":["."]},{"start":{"row":7,"column":23},"end":{"row":7,"column":24},"action":"remove","lines":["9"]},{"start":{"row":7,"column":22},"end":{"row":7,"column":23},"action":"remove","lines":["."]}],[{"start":{"row":7,"column":22},"end":{"row":7,"column":23},"action":"insert","lines":["."],"id":19},{"start":{"row":7,"column":23},"end":{"row":7,"column":24},"action":"insert","lines":["1"]},{"start":{"row":7,"column":24},"end":{"row":7,"column":25},"action":"insert","lines":["1"]}],[{"start":{"row":30,"column":15},"end":{"row":30,"column":27},"action":"remove","lines":["python3.9.16"],"id":20},{"start":{"row":30,"column":15},"end":{"row":30,"column":25},"action":"insert","lines":["python3.11"]}],[{"start":{"row":53,"column":15},"end":{"row":53,"column":27},"action":"remove","lines":["python3.9.16"],"id":21},{"start":{"row":53,"column":15},"end":{"row":53,"column":25},"action":"insert","lines":["python3.11"]}],[{"start":{"row":0,"column":0},"end":{"row":76,"column":0},"action":"remove","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: 'AWS::Serverless-2016-10-31'","Resources:","  # GetTasks Lambda Function","  GetTasksFunction:","    Type: AWS::Serverless::Function","    Properties:","      Runtime: python3.11","      CodeUri: src/handlers/getTasks","      Handler: app.lambda_handler","      Policies:","        - DynamoDBCrudPolicy:","            TableName: !Ref TasksTable","      Environment:","        Variables:","          TASKS_TABLE: !Ref TasksTable","      Events:","        GetTasksFunctionApi:","          Type: Api","          Properties:","            RestApiId: !Ref TasksApi","            Path: /tasks","            Method: GET","            Auth:","              Authorizer: MyLambdaTokenAuthorizer","","  # CreateTask Lambda Function","  CreateTaskFunction:","    Type: AWS::Serverless::Function","    Properties:","      Runtime: python3.11","      CodeUri: src/handlers/createTask","      Handler: app.lambda_handler","      Policies:","        - DynamoDBCrudPolicy:","            TableName: !Ref TasksTable","      Environment:","        Variables:","          TASKS_TABLE: !Ref TasksTable","      Events:","        PostTaskFunctionApi:","          Type: Api","          Properties:","            RestApiId: !Ref TasksApi","            Path: /tasks","            Method: POST","            Auth:","              Authorizer: MyLambdaTokenAuthorizer","","  # Lambda Authorizer Function","  MyLambdaTokenAuthorizer:","    Type: AWS::Serverless::Function","    Properties:","      Runtime: python3.11","      CodeUri: src/handlers/authorizer","      Handler: app.authorizer_handler","      Policies: AWSLambdaBasicExecutionRole","      Environment:","        Variables:","          AUTHORIZER_KEY: \"some-key\"","","  # DynamoDB Table","  TasksTable:","    Type: AWS::DynamoDB::Table","    Properties:","      AttributeDefinitions:","        - AttributeName: \"user\"","          AttributeType: \"S\"","        - AttributeName: \"id\"","          AttributeType: \"S\"","      KeySchema:","        - AttributeName: \"user\"","          KeyType: \"HASH\"","        - AttributeName: \"id\"","          KeyType: \"RANGE\"","      BillingMode: PAY_PER_REQUEST",""],"id":22},{"start":{"row":0,"column":0},"end":{"row":83,"column":0},"action":"insert","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: 'AWS::Serverless-2016-10-31'","Resources:","  # API Gateway","  TasksApi:","    Type: AWS::Serverless::Api","    Properties:","      Name: TasksApi","      StageName: Prod","","  # GetTasks Lambda Function","  GetTasksFunction:","    Type: AWS::Serverless::Function","    Properties:","      Runtime: python3.11","      CodeUri: src/handlers/getTasks","      Handler: app.lambda_handler","      Policies:","        - DynamoDBCrudPolicy:","            TableName: !Ref TasksTable","      Environment:","        Variables:","          TASKS_TABLE: !Ref TasksTable","      Events:","        GetTasksFunctionApi:","          Type: Api","          Properties:","            RestApiId: !Ref TasksApi","            Path: /tasks","            Method: GET","            Auth:","              Authorizer: MyLambdaTokenAuthorizer","","  # CreateTask Lambda Function","  CreateTaskFunction:","    Type: AWS::Serverless::Function","    Properties:","      Runtime: python3.11","      CodeUri: src/handlers/createTask","      Handler: app.lambda_handler","      Policies:","        - DynamoDBCrudPolicy:","            TableName: !Ref TasksTable","      Environment:","        Variables:","          TASKS_TABLE: !Ref TasksTable","      Events:","        PostTaskFunctionApi:","          Type: Api","          Properties:","            RestApiId: !Ref TasksApi","            Path: /tasks","            Method: POST","            Auth:","              Authorizer: MyLambdaTokenAuthorizer","","  # Lambda Authorizer Function","  MyLambdaTokenAuthorizer:","    Type: AWS::Serverless::Function","    Properties:","      Runtime: python3.11","      CodeUri: src/handlers/authorizer","      Handler: app.authorizer_handler","      Policies: AWSLambdaBasicExecutionRole","      Environment:","        Variables:","          AUTHORIZER_KEY: \"some-key\"","","  # DynamoDB Table","  TasksTable:","    Type: AWS::DynamoDB::Table","    Properties:","      AttributeDefinitions:","        - AttributeName: \"user\"","          AttributeType: \"S\"","        - AttributeName: \"id\"","          AttributeType: \"S\"","      KeySchema:","        - AttributeName: \"user\"","          KeyType: \"HASH\"","        - AttributeName: \"id\"","          KeyType: \"RANGE\"","      BillingMode: PAY_PER_REQUEST",""]}],[{"start":{"row":61,"column":37},"end":{"row":61,"column":38},"action":"remove","lines":["r"],"id":23},{"start":{"row":61,"column":36},"end":{"row":61,"column":37},"action":"remove","lines":["e"]},{"start":{"row":61,"column":35},"end":{"row":61,"column":36},"action":"remove","lines":["z"]},{"start":{"row":61,"column":34},"end":{"row":61,"column":35},"action":"remove","lines":["i"]},{"start":{"row":61,"column":33},"end":{"row":61,"column":34},"action":"remove","lines":["r"]},{"start":{"row":61,"column":32},"end":{"row":61,"column":33},"action":"remove","lines":["o"]}],[{"start":{"row":10,"column":2},"end":{"row":32,"column":0},"action":"remove","lines":["# GetTasks Lambda Function","  GetTasksFunction:","    Type: AWS::Serverless::Function","    Properties:","      Runtime: python3.11","      CodeUri: src/handlers/getTasks","      Handler: app.lambda_handler","      Policies:","        - DynamoDBCrudPolicy:","            TableName: !Ref TasksTable","      Environment:","        Variables:","          TASKS_TABLE: !Ref TasksTable","      Events:","        GetTasksFunctionApi:","          Type: Api","          Properties:","            RestApiId: !Ref TasksApi","            Path: /tasks","            Method: GET","            Auth:","              Authorizer: MyLambdaTokenAuthorizer",""],"id":24}],[{"start":{"row":0,"column":0},"end":{"row":61,"column":0},"action":"remove","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: 'AWS::Serverless-2016-10-31'","Resources:","  # API Gateway","  TasksApi:","    Type: AWS::Serverless::Api","    Properties:","      Name: TasksApi","      StageName: Prod","","  ","  # CreateTask Lambda Function","  CreateTaskFunction:","    Type: AWS::Serverless::Function","    Properties:","      Runtime: python3.11","      CodeUri: src/handlers/createTask","      Handler: app.lambda_handler","      Policies:","        - DynamoDBCrudPolicy:","            TableName: !Ref TasksTable","      Environment:","        Variables:","          TASKS_TABLE: !Ref TasksTable","      Events:","        PostTaskFunctionApi:","          Type: Api","          Properties:","            RestApiId: !Ref TasksApi","            Path: /tasks","            Method: POST","            Auth:","              Authorizer: MyLambdaTokenAuthorizer","","  # Lambda Authorizer Function","  MyLambdaTokenAuthorizer:","    Type: AWS::Serverless::Function","    Properties:","      Runtime: python3.11","      CodeUri: src/handlers/auth","      Handler: app.authorizer_handler","      Policies: AWSLambdaBasicExecutionRole","      Environment:","        Variables:","          AUTHORIZER_KEY: \"some-key\"","","  # DynamoDB Table","  TasksTable:","    Type: AWS::DynamoDB::Table","    Properties:","      AttributeDefinitions:","        - AttributeName: \"user\"","          AttributeType: \"S\"","        - AttributeName: \"id\"","          AttributeType: \"S\"","      KeySchema:","        - AttributeName: \"user\"","          KeyType: \"HASH\"","        - AttributeName: \"id\"","          KeyType: \"RANGE\"","      BillingMode: PAY_PER_REQUEST",""],"id":25},{"start":{"row":0,"column":0},"end":{"row":68,"column":0},"action":"insert","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: 'AWS::Serverless-2016-10-31'","Resources:","  # API Gateway","  TasksApi:","    Type: AWS::Serverless::Api","    Properties:","      Name: TasksApi","      StageName: Prod","      Auth:","        DefaultAuthorizer: MyLambdaTokenAuthorizer","        Authorizers:","          MyLambdaTokenAuthorizer:","            FunctionArn: !GetAtt MyLambdaTokenAuthorizer.Arn","            Identity:","              Header: Authorization","","  # CreateTask Lambda Function","  CreateTaskFunction:","    Type: AWS::Serverless::Function","    Properties:","      Runtime: python3.11","      CodeUri: src/handlers/createTask","      Handler: app.lambda_handler","      Policies:","        - DynamoDBCrudPolicy:","            TableName: !Ref TasksTable","      Environment:","        Variables:","          TASKS_TABLE: !Ref TasksTable","      Events:","        PostTaskFunctionApi:","          Type: Api","          Properties:","            RestApiId: !Ref TasksApi","            Path: /tasks","            Method: POST","            Auth:","              Authorizer: MyLambdaTokenAuthorizer","","  # Lambda Authorizer Function","  MyLambdaTokenAuthorizer:","    Type: AWS::Serverless::Function","    Properties:","      Runtime: python3.11","      CodeUri: src/handlers/auth","      Handler: app.authorizer_handler","      Policies:","        - AWSLambdaBasicExecutionRole","      Environment:","        Variables:","          AUTHORIZER_KEY: \"some-key\"","","  # DynamoDB Table","  TasksTable:","    Type: AWS::DynamoDB::Table","    Properties:","      AttributeDefinitions:","        - AttributeName: \"user\"","          AttributeType: \"S\"","        - AttributeName: \"id\"","          AttributeType: \"S\"","      KeySchema:","        - AttributeName: \"user\"","          KeyType: \"HASH\"","        - AttributeName: \"id\"","          KeyType: \"RANGE\"","      BillingMode: PAY_PER_REQUEST",""]}],[{"start":{"row":16,"column":0},"end":{"row":17,"column":0},"action":"insert","lines":["",""],"id":26},{"start":{"row":17,"column":0},"end":{"row":18,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":17,"column":0},"end":{"row":39,"column":0},"action":"insert","lines":["# GetTasks Lambda Function","GetTasksFunction:","  Type: AWS::Serverless::Function","  Properties:","    Runtime: python3.11","    CodeUri: src/handlers/getTasks","    Handler: app.lambda_handler","    Policies:","      - DynamoDBCrudPolicy:","          TableName: !Ref TasksTable","    Environment:","      Variables:","        TASKS_TABLE: !Ref TasksTable","    Events:","      GetTasksFunctionApi:","        Type: Api","        Properties:","          RestApiId: !Ref TasksApi","          Path: /tasks","          Method: GET","          Auth:","            Authorizer: MyLambdaTokenAuthorizer",""],"id":27}],[{"start":{"row":18,"column":0},"end":{"row":18,"column":4},"action":"insert","lines":["    "],"id":28},{"start":{"row":19,"column":0},"end":{"row":19,"column":4},"action":"insert","lines":["    "]},{"start":{"row":20,"column":0},"end":{"row":20,"column":4},"action":"insert","lines":["    "]},{"start":{"row":21,"column":0},"end":{"row":21,"column":4},"action":"insert","lines":["    "]},{"start":{"row":22,"column":0},"end":{"row":22,"column":4},"action":"insert","lines":["    "]},{"start":{"row":23,"column":0},"end":{"row":23,"column":4},"action":"insert","lines":["    "]},{"start":{"row":24,"column":0},"end":{"row":24,"column":4},"action":"insert","lines":["    "]},{"start":{"row":25,"column":0},"end":{"row":25,"column":4},"action":"insert","lines":["    "]},{"start":{"row":26,"column":0},"end":{"row":26,"column":4},"action":"insert","lines":["    "]},{"start":{"row":27,"column":0},"end":{"row":27,"column":4},"action":"insert","lines":["    "]},{"start":{"row":28,"column":0},"end":{"row":28,"column":4},"action":"insert","lines":["    "]},{"start":{"row":29,"column":0},"end":{"row":29,"column":4},"action":"insert","lines":["    "]},{"start":{"row":30,"column":0},"end":{"row":30,"column":4},"action":"insert","lines":["    "]},{"start":{"row":31,"column":0},"end":{"row":31,"column":4},"action":"insert","lines":["    "]},{"start":{"row":32,"column":0},"end":{"row":32,"column":4},"action":"insert","lines":["    "]},{"start":{"row":33,"column":0},"end":{"row":33,"column":4},"action":"insert","lines":["    "]},{"start":{"row":34,"column":0},"end":{"row":34,"column":4},"action":"insert","lines":["    "]},{"start":{"row":35,"column":0},"end":{"row":35,"column":4},"action":"insert","lines":["    "]},{"start":{"row":36,"column":0},"end":{"row":36,"column":4},"action":"insert","lines":["    "]},{"start":{"row":37,"column":0},"end":{"row":37,"column":4},"action":"insert","lines":["    "]},{"start":{"row":38,"column":0},"end":{"row":38,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":92,"column":0},"end":{"row":93,"column":0},"action":"insert","lines":["",""],"id":29},{"start":{"row":93,"column":0},"end":{"row":94,"column":0},"action":"insert","lines":["",""]},{"start":{"row":94,"column":0},"end":{"row":95,"column":0},"action":"insert","lines":["",""]},{"start":{"row":95,"column":0},"end":{"row":96,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":0,"column":0},"end":{"row":96,"column":0},"action":"remove","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: 'AWS::Serverless-2016-10-31'","Resources:","  # API Gateway","  TasksApi:","    Type: AWS::Serverless::Api","    Properties:","      Name: TasksApi","      StageName: Prod","      Auth:","        DefaultAuthorizer: MyLambdaTokenAuthorizer","        Authorizers:","          MyLambdaTokenAuthorizer:","            FunctionArn: !GetAtt MyLambdaTokenAuthorizer.Arn","            Identity:","              Header: Authorization","","# GetTasks Lambda Function","    GetTasksFunction:","      Type: AWS::Serverless::Function","      Properties:","        Runtime: python3.11","        CodeUri: src/handlers/getTasks","        Handler: app.lambda_handler","        Policies:","          - DynamoDBCrudPolicy:","              TableName: !Ref TasksTable","        Environment:","          Variables:","            TASKS_TABLE: !Ref TasksTable","        Events:","          GetTasksFunctionApi:","            Type: Api","            Properties:","              RestApiId: !Ref TasksApi","              Path: /tasks","              Method: GET","              Auth:","                Authorizer: MyLambdaTokenAuthorizer","","","  # CreateTask Lambda Function","  CreateTaskFunction:","    Type: AWS::Serverless::Function","    Properties:","      Runtime: python3.11","      CodeUri: src/handlers/createTask","      Handler: app.lambda_handler","      Policies:","        - DynamoDBCrudPolicy:","            TableName: !Ref TasksTable","      Environment:","        Variables:","          TASKS_TABLE: !Ref TasksTable","      Events:","        PostTaskFunctionApi:","          Type: Api","          Properties:","            RestApiId: !Ref TasksApi","            Path: /tasks","            Method: POST","            Auth:","              Authorizer: MyLambdaTokenAuthorizer","","  # Lambda Authorizer Function","  MyLambdaTokenAuthorizer:","    Type: AWS::Serverless::Function","    Properties:","      Runtime: python3.11","      CodeUri: src/handlers/auth","      Handler: app.authorizer_handler","      Policies:","        - AWSLambdaBasicExecutionRole","      Environment:","        Variables:","          AUTHORIZER_KEY: \"some-key\"","","  # DynamoDB Table","  TasksTable:","    Type: AWS::DynamoDB::Table","    Properties:","      AttributeDefinitions:","        - AttributeName: \"user\"","          AttributeType: \"S\"","        - AttributeName: \"id\"","          AttributeType: \"S\"","      KeySchema:","        - AttributeName: \"user\"","          KeyType: \"HASH\"","        - AttributeName: \"id\"","          KeyType: \"RANGE\"","      BillingMode: PAY_PER_REQUEST","","","","",""],"id":31},{"start":{"row":0,"column":0},"end":{"row":92,"column":0},"action":"insert","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: 'AWS::Serverless-2016-10-31'","Resources:","  # API Gateway","  TasksApi:","    Type: AWS::Serverless::Api","    Properties:","      Name: TasksApi","      StageName: Prod","      Auth:","        DefaultAuthorizer: MyLambdaTokenAuthorizer","        Authorizers:","          MyLambdaTokenAuthorizer:","            FunctionArn: !GetAtt MyLambdaTokenAuthorizer.Arn","            Identity:","              Header: Authorization","","# GetTasks Lambda Function","    GetTasksFunction:","      Type: AWS::Serverless::Function","      Properties:","        Runtime: python3.11","        CodeUri: src/handlers/getTasks","        Handler: app.lambda_handler","        Policies:","          - DynamoDBCrudPolicy:","              TableName: !Ref TasksTable","        Environment:","          Variables:","            TASKS_TABLE: !Ref TasksTable","        Events:","          GetTasksFunctionApi:","            Type: Api","            Properties:","              RestApiId: !Ref TasksApi","              Path: /tasks","              Method: GET","              Auth:","                Authorizer: MyLambdaTokenAuthorizer","","","  # CreateTask Lambda Function","  CreateTaskFunction:","    Type: AWS::Serverless::Function","    Properties:","      Runtime: python3.11","      CodeUri: src/handlers/createTask","      Handler: app.lambda_handler","      Policies:","        - DynamoDBCrudPolicy:","            TableName: !Ref TasksTable","      Environment:","        Variables:","          TASKS_TABLE: !Ref TasksTable","      Events:","        PostTaskFunctionApi:","          Type: Api","          Properties:","            RestApiId: !Ref TasksApi","            Path: /tasks","            Method: POST","            Auth:","              Authorizer: MyLambdaTokenAuthorizer","","  # Lambda Authorizer Function","  MyLambdaTokenAuthorizer:","    Type: AWS::Serverless::Function","    Properties:","      Runtime: python3.11","      CodeUri: src/handlers/auth","      Handler: app.authorizer_handler","      Policies:","        - AWSLambdaBasicExecutionRole","      Environment:","        Variables:","          AUTHORIZER_KEY: \"some-key\"","","  # DynamoDB Table","  TasksTable:","    Type: AWS::DynamoDB::Table","    Properties:","      AttributeDefinitions:","        - AttributeName: \"user\"","          AttributeType: \"S\"","        - AttributeName: \"id\"","          AttributeType: \"S\"","      KeySchema:","        - AttributeName: \"user\"","          KeyType: \"HASH\"","        - AttributeName: \"id\"","          KeyType: \"RANGE\"","      BillingMode: PAY_PER_REQUEST",""]}],[{"start":{"row":0,"column":0},"end":{"row":92,"column":0},"action":"remove","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: 'AWS::Serverless-2016-10-31'","Resources:","  # API Gateway","  TasksApi:","    Type: AWS::Serverless::Api","    Properties:","      Name: TasksApi","      StageName: Prod","      Auth:","        DefaultAuthorizer: MyLambdaTokenAuthorizer","        Authorizers:","          MyLambdaTokenAuthorizer:","            FunctionArn: !GetAtt MyLambdaTokenAuthorizer.Arn","            Identity:","              Header: Authorization","","# GetTasks Lambda Function","    GetTasksFunction:","      Type: AWS::Serverless::Function","      Properties:","        Runtime: python3.11","        CodeUri: src/handlers/getTasks","        Handler: app.lambda_handler","        Policies:","          - DynamoDBCrudPolicy:","              TableName: !Ref TasksTable","        Environment:","          Variables:","            TASKS_TABLE: !Ref TasksTable","        Events:","          GetTasksFunctionApi:","            Type: Api","            Properties:","              RestApiId: !Ref TasksApi","              Path: /tasks","              Method: GET","              Auth:","                Authorizer: MyLambdaTokenAuthorizer","","","  # CreateTask Lambda Function","  CreateTaskFunction:","    Type: AWS::Serverless::Function","    Properties:","      Runtime: python3.11","      CodeUri: src/handlers/createTask","      Handler: app.lambda_handler","      Policies:","        - DynamoDBCrudPolicy:","            TableName: !Ref TasksTable","      Environment:","        Variables:","          TASKS_TABLE: !Ref TasksTable","      Events:","        PostTaskFunctionApi:","          Type: Api","          Properties:","            RestApiId: !Ref TasksApi","            Path: /tasks","            Method: POST","            Auth:","              Authorizer: MyLambdaTokenAuthorizer","","  # Lambda Authorizer Function","  MyLambdaTokenAuthorizer:","    Type: AWS::Serverless::Function","    Properties:","      Runtime: python3.11","      CodeUri: src/handlers/auth","      Handler: app.authorizer_handler","      Policies:","        - AWSLambdaBasicExecutionRole","      Environment:","        Variables:","          AUTHORIZER_KEY: \"some-key\"","","  # DynamoDB Table","  TasksTable:","    Type: AWS::DynamoDB::Table","    Properties:","      AttributeDefinitions:","        - AttributeName: \"user\"","          AttributeType: \"S\"","        - AttributeName: \"id\"","          AttributeType: \"S\"","      KeySchema:","        - AttributeName: \"user\"","          KeyType: \"HASH\"","        - AttributeName: \"id\"","          KeyType: \"RANGE\"","      BillingMode: PAY_PER_REQUEST",""],"id":32},{"start":{"row":0,"column":0},"end":{"row":91,"column":0},"action":"insert","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: 'AWS::Serverless-2016-10-31'","Resources:","  # API Gateway","  TasksApi:","    Type: AWS::Serverless::Api","    Properties:","      Name: TasksApi","      StageName: Prod","      Auth:","        DefaultAuthorizer: MyLambdaTokenAuthorizer","        Authorizers:","          MyLambdaTokenAuthorizer:","            FunctionArn: !GetAtt MyLambdaTokenAuthorizer.Arn","            Identity:","              Header: Authorization","","  # GetTasks Lambda Function","  GetTasksFunction:","    Type: AWS::Serverless::Function","    Properties:","      Runtime: python3.11","      CodeUri: src/handlers/getTasks","      Handler: app.lambda_handler","      Policies:","        - DynamoDBCrudPolicy:","            TableName: !Ref TasksTable","      Environment:","        Variables:","          TASKS_TABLE: !Ref TasksTable","      Events:","        GetTasksFunctionApi:","          Type: Api","          Properties:","            RestApiId: !Ref TasksApi","            Path: /tasks","            Method: GET","            Auth:","              Authorizer: MyLambdaTokenAuthorizer","","  # CreateTask Lambda Function","  CreateTaskFunction:","    Type: AWS::Serverless::Function","    Properties:","      Runtime: python3.11","      CodeUri: src/handlers/createTask","      Handler: app.lambda_handler","      Policies:","        - DynamoDBCrudPolicy:","            TableName: !Ref TasksTable","      Environment:","        Variables:","          TASKS_TABLE: !Ref TasksTable","      Events:","        PostTaskFunctionApi:","          Type: Api","          Properties:","            RestApiId: !Ref TasksApi","            Path: /tasks","            Method: POST","            Auth:","              Authorizer: MyLambdaTokenAuthorizer","","  # Lambda Authorizer Function","  MyLambdaTokenAuthorizer:","    Type: AWS::Serverless::Function","    Properties:","      Runtime: python3.11","      CodeUri: src/handlers/auth","      Handler: app.authorizer_handler","      Policies:","        - AWSLambdaBasicExecutionRole","      Environment:","        Variables:","          AUTHORIZER_KEY: \"some-key\"","","  # DynamoDB Table","  TasksTable:","    Type: AWS::DynamoDB::Table","    Properties:","      AttributeDefinitions:","        - AttributeName: \"user\"","          AttributeType: \"S\"","        - AttributeName: \"id\"","          AttributeType: \"S\"","      KeySchema:","        - AttributeName: \"user\"","          KeyType: \"HASH\"","        - AttributeName: \"id\"","          KeyType: \"RANGE\"","      BillingMode: PAY_PER_REQUEST",""]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":3,"column":15},"end":{"row":3,"column":15},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1716990076248,"hash":"5f309261acda5a97fb500cacdb98f1aaeebe864b"}