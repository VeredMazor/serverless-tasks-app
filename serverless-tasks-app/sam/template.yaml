AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Resources:
  # API Gateway
  TasksApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: TasksApi
      StageName: Prod
      Auth:
        DefaultAuthorizer: MyLambdaTokenAuthorizer
        Authorizers:
          MyLambdaTokenAuthorizer:
            FunctionArn: !GetAtt MyLambdaTokenAuthorizer.Arn
            Identity:
              Header: Authorization

  # GetTasks Lambda Function
  GetTasksFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: python3.11
      CodeUri: src/handlers/getTasks
      Handler: app.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TasksTable
      Environment:
        Variables:
          TASKS_TABLE: !Ref TasksTable
      Events:
        GetTasksFunctionApi:
          Type: Api
          Properties:
            RestApiId: !Ref TasksApi
            Path: /tasks
            Method: GET
            Auth:
              Authorizer: MyLambdaTokenAuthorizer

  # CreateTask Lambda Function
  CreateTaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: python3.11
      CodeUri: src/handlers/createTask
      Handler: app.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TasksTable
      Environment:
        Variables:
          TASKS_TABLE: !Ref TasksTable
      Events:
        PostTaskFunctionApi:
          Type: Api
          Properties:
            RestApiId: !Ref TasksApi
            Path: /tasks
            Method: POST
            Auth:
              Authorizer: MyLambdaTokenAuthorizer

  # Lambda Authorizer Function
  MyLambdaTokenAuthorizer:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: python3.11
      CodeUri: src/handlers/auth
      Handler: app.authorizer_handler
      Policies:
        - AWSLambdaBasicExecutionRole
      Environment:
        Variables:
          AUTHORIZER_KEY: "some-key"

  # DynamoDB Table
  TasksTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "user"
          AttributeType: "S"
        - AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "user"
          KeyType: "HASH"
        - AttributeName: "id"
          KeyType: "RANGE"
      BillingMode: PAY_PER_REQUEST
